#! /bin/bash
#
# change wallpaper

# choose random image from ~/.backgrounds randomly
PARSED=$(getopt -o 'hnwb:f:l::' -l 'help,nsfw,wallpaper-only,bg-folder:,log:' -- "$@")
eval set -- "$PARSED"

LOG=false
NSFW=false
BG_FOLDER=$(xdg-user-dir PICTURES)/backgrounds
WALL_ONLY=false

while [ $# -gt 0 ]; do
  opt="$1"
  shift
  case "$opt" in
  "-h" | "--help")
    print_usage
    continue
    ;;
  "-n" | "--nsfw")
    NSFW=true
    continue
    ;;
  "-l" | "--log")
    if [ -z "$1" ]; then
      LOG=${XDG_CACHE_HOME}/last-wallpaper
    else
      LOG=$1
    fi
    shift
    continue
    ;;
  "-b" | "--bg-folder")
    BG_FOLDER="$1"
    shift
    continue
    ;;
  "-w" | "-wallpaper-only")
    WALL_ONLY=true
    shift
    continue
    ;;
  "--") break ;;
  *)
    echo >&2 "Invalid option: $@"
    exit 1
    ;;
  esac
done

# usage: random_wallpaper
## get random wallpaper file from $BG_FOLDER
random_wallpaper() {
  local filter
  if [ "${NSFW}" = false ]; then
    filter="${filter:+$filter }-type d -ipath *nsfw* -prune -o"
  fi

  find -L ${BG_FOLDER} ${filter} -type f -ipath '*landscape*' -print |
    shuf -n1
}

# usage: set_wallpaper <WALLPAPER_FILE> <MONITOR>
## set wallpaper on provided display
set_wallpaper() {
  swww img -t wave ${2:+-o "$2"} "$1"
}

# usage: change_wallpapers
## change wallpapers for all monitors
change_wallpapers() {
  if command -v swww >/dev/null; then
    for disp in $(swww query | cut -d: -f1); do
      WALLPAPER=$(random_wallpaper)
      set_wallpaper "$WALLPAPER" "$disp"

      if [ "${LOG}" != false ]; then
        printf "%s: %s\n" "$(date -Im)" "$WALLPAPER" | tee -a $LOG >/dev/null
        tail -n 250 $LOG | tee $LOG >/dev/null
      fi
    done
  fi
  echo $WALLPAPER
}

# usage: change_themes <WALLPAPER_IMAGE>
change_themes() {
  matugen image "$1" -c ~/.config/matugen/config.toml
}

LAST_WALL=$(change_wallpapers)
if [ "$WALL_ONLY" = "true" ]; then exit; fi

change_themes "$LAST_WALL"
