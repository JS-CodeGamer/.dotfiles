#!/usr/bin/nft -f
# vim:set ts=2 sw=2 et:

# IPv4/IPv6 Simple & Safe firewall ruleset.
# More examples in /usr/share/nftables/ and /usr/share/doc/nftables/examples/.

destroy table inet filter

table inet filter {

  define unbound_tcp_ports = {
    22,  # SSH
    53   # DNS (TCP)
  }

  define unbound_udp_ports = {
    53,  # DNS (UDP)
    67   # DHCP (UDP)
  }

  define ratelimited_tcp_ports = {
    6080,  # NEXTCLOUD (TCP)
    6081,  # QBITTORRENT (TCP)
    6082,  # PASTEBIN (TCP)
    6083 #,  # VAULTWARDEN (TCP)
    #6084  # TEMP LOCAL (TCP)
  }

  define ratelimited_udp_ports = {
      6080,  # NEXTCLOUD (TCP)
      6081,  # QBITTORRENT (TCP)
      6082,  # PASTEBIN (TCP)
      6083 #,  # VAULTWARDEN (TCP)
      #6084  # TEMP LOCAL (TCP)
  }

  chain input {
    type filter hook input priority filter
    policy drop

    ct state vmap { invalid : drop, established : accept , related : accept } comment "drop invalid connections and allow tracked connections"

    iif lo accept comment "allow from loopback"

    ip protocol icmp accept comment "allow icmp"
    meta l4proto ipv6-icmp accept comment "allow icmp v6"

    tcp dport $unbound_tcp_ports counter accept comment "allow unbound tcp ports"
    udp dport $unbound_udp_ports counter accept comment "allow unbound udp ports"


    # ratelimiting
    # pkttype host limit rate 200/second burst 50 packets counter reject with icmpx type admin-prohibited
    tcp dport $ratelimited_tcp_ports counter accept comment "allow ratelimited tcp ports"
    udp dport $ratelimited_udp_ports counter accept comment "allow ratelimited udp ports"

    counter
  }

  chain forward {
    type filter hook forward priority filter
    policy drop
  }
}
